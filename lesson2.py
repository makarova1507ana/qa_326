#-------------------------------------------Задание--------------------------------------------------------#
"""
Дан прямоугольник размером a (например: 647) x  b(например: 170). Сколько квадратов
со стороной 30 можно вырезать из него?
Для решения задачи использовать переменные для задания
размеров прямоугольника
а также переменную для записи результата
"""
# a = 647
# b = 170
# c = 30
# count_of_height = a // c # countHeight
# count_of_length = b // c
# all_count_square = count_of_height * count_of_length
# print("Количество квадратов, которые можно вырезать из заданного прямоугольника:", all_count_square)
#





# a = 5
# b = 3
# print(b)# 3
#
# a, b = b, a
# print(b)# 5
#
# c, d, e, f = 4, b, 7, "book"
# print(b)# 5


#https://digitology.tech/docs/python_3/library/turtle.html
from turtle import *                                   # import  turtle

# shape("turtle")
# a = int(input("Введите сторону квадрата "))
# forward(a)
# left(90)
# forward(a)
# left(90)
# forward(a)
# left(90)
# forward(a)
# left(90)


# #---------------------------------------------условные операторы-----------------------------------------------------#
# # если температура > 0 , то напечатать "тепло", иначе напечтать "Холодно"
# # if -  если
# # else -  иначе
#
# t = -10 # 10 , 1000 , -10
#
# #  t > 0 -> False при t = -10
# #  print("тепло") будет исполнена только в том случае, если было возращено True
# if t > 0: print("тепло") # True, False - логические типы данных
#
# # ----------------- из мема  ------------------------ #
# bread = 1
# egs = int(input("сколько яиц ? ")) # узнаем о кол-во яиц
# if egs >= 1:
#     bread *=10
#     print(f'покупаешь {bread} булок')
# else:
#     print(f'покупаешь {bread} булку')






#--------------------------------------------Операторы сравнения----------------------------------------------------------------#
# # >     <    >=   <=
# # ==   точное сравнение
# # != не равно
# t = 10000
# if t > 0: print("тепло")




# ---------------------------Задание----------------------------------------#
# #Напишите программу, для вычисления данного выражения (квадратный корень из y)
# y = int(input("введите число "))
#
# #print(y**0.5)
#
# import math
#
# if y >= 0:
#     print(math.sqrt(y))




# # ---------------------------Задание----------------------------------------#
# #Дано число. Если оно больше 3, то увеличить это число на 10
#
# x = int(input())
# if x > 3: # x = -1 -> False, x = 0 -> False, x=2 -> False , x=3 -> False, x=4 -> True
#     x = x + 10
#     print(x)












# Выяснить является ли число x -  четным
# x = int(input("Введите число"))
# mod = x % 2
# print("остаток при делении на два = ", mod)
#
# if mod == 0:
#     print(f"{x} четное число")
# else: #в условии False  или можно вместо else использовать if mod != 0:
#     print(f"{x} нечетное число")




# Пользователь вводит с клавиатуры два числа.
# Необходимо найти максимум из двух чисел и показать его на
# экран.
# num1 = int(input("Введите первое число: ")) # 5
# num2 = int(input("Введите второе число: ")) # 3
# if num1 < num2:# 5 < 3  - False
#     print(f"{num2} больше чем {num1}") # не выполнится
# if num1 > num2:# 5 > 3  - True
#     print(f"{num1} больше чем {num2}")# выполнится



# Пользователь вводит с клавиатуры двузначное число.
# Необходимо найти максимум из двух цифр числа и показать его на
# экран.
# 
# x, y, operation = int(input('Введите число 1 ')), int(input('Введите число 2 ')), input('Что показать: сумма, разница, среднее, произведение? ')
# if operation == 'сумма':
#     print('сумма', x + y)
# elif operation == 'разница':
#     print('разница', x - y)
# elif operation == 'среднеарифметическое':
#     print('среднеарифметическое', (x + y)/2)
# elif operation == 'произведение':
#     print('произведение', x * y)
# else:
#     print('Выберите верную операцию')

#
# # #-------------------------------------треугольник------------------------------------------------#
# shape("turtle")
# a = int(input("Введите сторону треугольника "))
# if a > 0:
#     forward(a)
#     left(120)
#     forward(a)
#     left(120)
#     forward(a)
#     left(120)
#
# import time
# time.sleep(10)
